# Generic template for building object code from ANTLR3 grammars
# targeted at the C language output.
#
# While this could be adpated for other targets, it is likely that
# they will use their own mechanisms.
#
# Jim Idle - jimiattemporal-wavedottcom - www.temporal-wave.com
#
# [The "BSD licence"]
# Copyright (c) 2005-2008 Terence Parr
# Makefile Copyright (c) 2008 Jim Idle
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
#    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#    IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#    NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#    THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------

# --------
# Declare the suffixes that ANTLR3 grammars use. These days you can
# leave all your grammars suffixed by .g as the reasons for using .g3, .g3p
# and soon were to do with Visual Studio rule files, which I have now modified 
# such that the user chooses which .rules fil to apply to any particular .g
# file. 
#
GRAMMARSUFFIX=.g
.SUFFIXES=$(GRAMMARSUFFIX) .u .c .cpp .C .o .c++

# -------
#  Declare the generated object files as precious.
#
.PRECIOUS=.o

# -------
#  Find out all the grammar names
#  (Note that this will be fooled be imported grammars unfortunately, hence
#  this variable is only set here if the caller has no already set it. This
#  way you can manually specify the grammars that should be built and exclude
#  those that are the subject of imports
#
ANTLRGRAMMARS ?= $(wildcard *.g)

# ----------------------
#  BUILD RULES
#

clean::
	$(RM) $(ANTLRGENLIST)

# --------
#  How to build a dependency file from an ANTLR grammar
#
%.u: %.g
	@echo "Bulding dependencies for "$<
	java org.antlr.Tool -depend $< > $@
	@grep ":" $@ |awk 'BEGIN {printf "ANTLRGENLIST := " }{printf " " $$1}END {print ""}'  >> $@.tmp
	@cat $@.tmp >> $@
	$(RM) $@.tmp


# --------
#  How to build a .c file from a .g file
#
%.tokens %.c %Lexer.c %Parser.c %Lexer.h %Parser.h %.h: %.g
	java org.antlr.Tool $(GRAMMAROPTIONS) $<


# ----------------------
#  Include the dependancy files for all the grammar files that
#  we have. If GNU Make tries to include these and they are not there
#  it will look to see if it can build the dependancy file using the
#  rule above.
#
#ifneq ($(MAKECMDGOALS),clean)

ifneq ($(strip $(ANTLRGRAMMARS)),)
-include $(ANTLRGRAMMARS:.g=.u)
endif

#endif

